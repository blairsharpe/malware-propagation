class Population():

    def __init__(self, SI, IR, SR, malware_size):
        self.SI_rate = float(SI)
        self.IR_rate = float(IR)
        self.SR_rate = float(SR)

        self.malware_size = malware_size

    def time_interval(self):

        susceptible = self.S
        infected = self.I
        recovered = self.R

        # First configure S -> I
        I2S_amount = (self.SI_rate * self.S)
        infected += I2S_amount
        susceptible -= I2S_amount
        # Second configure I -> R
        I2R_amount = (self.I * self.IR_rate)
        recovered += I2R_amount
        infected -= I2R_amount
        # Third, configure S -> R
        R2S_amount = (self.S * self.SR_rate)
        recovered += R2S_amount
        susceptible -= R2S_amount

        self.S = susceptible
        self.I = infected
        self.R = recovered

        return True

    def print_population(self):
        print("S: {}   I: {}  R: {}".format(self.S, \
                self.I, self.R))

    # for interval in range(0, 1000):
    #     Population.print_population()
    #     Population.time_interval()


