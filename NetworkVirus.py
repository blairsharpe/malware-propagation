from collections import defaultdict

class Network():
    def __init__(self):
       self.network = defaultdict(dict)
       self.connections =

    def parse(self, info):
        info = info.split("\n")
        num_networks = int(info[0])

        for host in range(1, num_networks+1):

            # Find the amount of hosts in the network
            host_name, num_hosts, infected = info[host].split()
            self.network[host_name]["size"] = int(num_hosts)
            self.network[host_name]["infected"] = int(infected)

        print(self.network)

class Population():

    def __init__(self, population, infected, SI, IR, SR):
        self.S = int(population) - int(infected) # Able to be infected
        self.I = int(infected)                   # Initial infected by pathogens
        self.R = 0                               # The recovered devices

        self.SI_rate = float(SI)
        self.IR_rate = float(IR)
        self.SR_rate = float(SR)

    def time_interval(self):

        susceptible = self.S
        infected = self.I
        recovered = self.R

        # First configure S -> I
        I2S_amount = (self.SI_rate * self.S)
        infected += I2S_amount
        susceptible -= I2S_amount
        # Second configure I -> R
        I2R_amount = (self.I * self.IR_rate)
        recovered += I2R_amount
        infected -= I2R_amount
        # Third, configure S -> R
        R2S_amount = (self.S * self.SR_rate)
        recovered += R2S_amount
        susceptible -= R2S_amount

        self.S = susceptible
        self.I = infected
        self.R = recovered

        return True

    def print_population(self):
        print("S: {}   I: {}  R: {}".format(self.S, \
                self.I, self.R))

if __name__ == "__main__":
    inp1 = """10
    A 1000 1
    B 1000 0
    C 1000 3
    D 1000 0
    E 1000 0
    F 1000 1
    G 1000 10
    H 1000 0
    I 1000 0
    J 1000 90
    10
    A B 10000
    B C 1000
    C D 2000
    D E 2000
    D F 2000
    D G 5000
    D H 9000
    D I 1000
    D H 8000
    D J 10000
    0.01 0.01 0.015
    256"""
    Network = Network()
    Network.parse(inp1)

    # Seed of infected systems (I) = 10
    # S->I rate: 0.01
    # I->R rate: 0.01
    # S->R rate: 0.015
    # pop_info = "10000 10 0.01 0.01 0.015"
    # parsed_info = parse_population_info(pop_info)
    # Population = Population(*parsed_info)
    # print(inp1)
    # for interval in range(0, 1000):
    #     Population.print_population()
    #     Population.time_interval()

